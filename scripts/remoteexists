#!/bin/bash

REMOTEURL="$1"
BRANCH="HEAD"
if [ -z "$1" ]; then
    echo "Remote URL argument required" 1>&2
    exit 1
elif [ ! -z "$2" ]; then
    BRANCH="$2"
fi

# create an askpass helper that returns error if github asks for a password
# (as it would if a public repo doesn't exist at the URL, regardless of whether
# a private one DOES exist. all repos we want are public, anyways

askpass="$(mktemp)"

trap "rm -f $askpass" EXIT

cat > $askpass <<'EOF'
#!/bin/bash
echo -e "`pwd` wants to ask for a password. NOPE\n$@" 1>&2
EOF

chmod +x $askpass

export GIT_ASKPASS=$askpass

COUNT="$(git ls-remote "$REMOTEURL" "$BRANCH" --exit-code 2>/dev/null | wc -l)"
RET=0
if [ $COUNT -eq 0 ]; then
  RET=1
fi

if [ "$BRANCH" = "HEAD" ]; then
    if [ $RET -eq 0 ]; then
        echo "Remote exists ($REMOTEURL)" 1>&2
    else
        echo "No remote found at ($REMOTEURL)" 1>&2
    fi
else
    if [ $RET -eq 0 ]; then
        echo "Remote exists ($REMOTEURL) with ref ($BRANCH)" 1>&2
    else
        echo "Remote missing ($REMOTEURL) or does not have ref ($BRANCH)" 1>&2
    fi
fi

exit $RET
